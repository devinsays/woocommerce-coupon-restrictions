language: php
dist: xenial

services:
    - mysql

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache

php:
  - 7.4
  - 7.3
  - 7.2

env:
  - WP_VERSION=latest WC_VERSION=4.2
  - WP_VERSION=latest WC_VERSION=4.1
  - WP_VERSION=latest WC_VERSION=4.0

matrix:
  fast_finish: true
  include:
    # Test select combinations of older dependencies.
    #
    # Some versions (3.9, 3.5) don't have explicit major.minor tags, so specific versions
    # are required.
    - php: 7.2
      env: WP_VERSION=latest WC_VERSION=3.9.3
    - php: 7.2
      env: WP_VERSION=latest WC_VERSION=3.8
    - php: 7.2
      env: WP_VERSION=latest WC_VERSION=3.7
    - php: 7.0
      env: WP_VERSION=latest WC_VERSION=3.5.8

    # WooCommerce 3.8 was the last version to support PHP 5.6
    - php: 5.6
      env: WP_VERSION=latest WC_VERSION=3.8

    # Explicitly test the lowest version we support.
    - name: Minimum requirements
      php: 5.6
      env: WP_VERSION=4.7.0 WC_VERSION=3.3.0

    # Test against WordPress trunk and the latest version of WooCommerce
    - name: Bleeding Edge
      php: 7.4
      env: WP_VERSION=trunk WC_VERSION=latest
  allow_failures:
    - name: Bleeding Edge

before_install:
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - phpenv config-rm xdebug.ini || true

install:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:3} < '7.1' ]]; then
      composer update --prefer-source --prefer-lowest --no-interaction --no-ansi
    else
      composer install --prefer-source --no-interaction --no-ansi
    fi
  - bash vendor/bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
  - bash tests/bin/install-woocommerce.sh $WC_VERSION

script:
  - ./vendor/bin/phpunit
